% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/scale-size.r
\name{scale_size}
\alias{scale_radius}
\alias{scale_size}
\alias{scale_size_continuous}
\alias{scale_size_discrete}
\title{Scale size (area or radius).}
\usage{
scale_size_continuous(..., range = c(1, 6))

scale_radius(..., range = c(1, 6))

scale_size(..., range = c(1, 6))

scale_size_discrete(..., range = c(2, 6))
}
\arguments{
\item{...}{common continuous scale parameters: \code{name}, \code{breaks},
\code{labels}, \code{na.value}, \code{limits} and \code{trans}.  See
\code{\link{continuous_scale}} for more details}

\item{range}{a numeric vector of length 2 that specifies the minimum and
maximum size of the plotting symbol after transformation.}
}
\description{
\code{scale_size} scales area, \code{scale_radius} scales radius. The size
aesthetic is most commonly used for points and text, and humans percieve
the area of points (not their radius), so this provides for optimal
perception.
}
\examples{
\donttest{
p <- ggplot(mtcars, aes(mpg, cyl, size = cyl)) +
   geom_point()
p
p + scale_size("cylinders")
p + scale_size("number\\nof\\ncylinders")

p + scale_size(range = c(0, 10))
p + scale_size(range = c(1, 2))

# If you want zero value to have zero size, use scale_size_area:
p + scale_size_area()

# You can map size to a factor, but it's not a terribly good
# idea, unless your factor is ordered, as in this example
ggplot(mtcars, aes(mpg, cyl, size = factor(cyl))) +
  geom_point()

# To control the size mapping for discrete variable, use
# scale_size_manual:
ggplot(mtcars, aes(mpg, cyl, size = factor(cyl))) +
  geom_point() +
  scale_size_manual(values = c(2, 4, 6))
}
}
\seealso{
\code{\link{scale_size_area}} if you want 0 values to be mapped
  to points with size 0.
}

