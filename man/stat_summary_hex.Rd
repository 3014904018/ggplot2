% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/stat-summary-hex.r
\name{stat_summary_hex}
\alias{stat_summary_hex}
\title{Apply function for 2D hexagonal bins.}
\usage{
stat_summary_hex(mapping = NULL, data = NULL, geom = "hex",
  position = "identity", bins = 30, drop = TRUE, fun = "mean",
  fun.args = list(), show.legend = NA, inherit.aes = TRUE, ...)
}
\arguments{
\item{mapping}{The aesthetic mapping, usually constructed with
\code{\link{aes}} or \code{\link{aes_string}}. Only needs to be set
at the layer level if you are overriding the plot defaults.}

\item{data}{A layer specific dataset - only needed if you want to override
the plot defaults.}

\item{geom}{The geometric object to use display the data}

\item{position}{The position adjustment to use for overlapping points
on this layer}

\item{bins}{numeric vector specifying number of bins in both x and y
directions. Set to 30 by default.}

\item{drop}{drop if the output of \code{fun} is \code{NA}.}

\item{fun}{function for summary.}

\item{fun.args}{A list of extra arguments to pass to \code{fun}}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link{borders}}.}

\item{...}{other arguments passed on to \code{\link{layer}}. This can
include aesthetics whose values you want to set, not map. See
\code{\link{layer}} for more details.}
}
\description{
\code{stat_summary2d} is a hexagonal variation of \code{\link{stat_summary}}.
The data are divided into hexagonal bins defined by \code{x} and \code{y}.
The values of \code{z} in each cell is are summarised with \code{fun}.
}
\section{Aesthetics}{

\itemize{
 \item \code{x}: horizontal position
 \item \code{y}: vertical position
 \item \code{z}: value passed to the summary function
}
}
\examples{
d <- ggplot(diamonds, aes(carat, depth, z = price))
d + stat_summary_hex()

# Specifying function
d + stat_summary_hex(fun = var)
d + stat_summary_hex(fun = function(x) sum(x^2))
d + stat_summary_hex(fun = "quantile", fun.args = list(probs = 0.5))
}
\seealso{
\code{\link{stat_summary2d}} for rectangular summarization.
  \code{\link{stat_bin2d}} for the hexagon-ing options.
}

